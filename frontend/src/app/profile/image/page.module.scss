@use "../../../styles/variables.scss" as vars;

.imageContainer {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 2.5rem;
  transition: transform 0.5s ease;

  &.isDone {
    animation: slide-out-right 0.4s cubic-bezier(0.55, 0.085, 0.68, 0.53) both;
  }
}

.headerContainer {
  display: flex;
  justify-content: space-between;
  width: 100%;
}

@media (max-width: 1400px) {
  .headerContainer {
    flex-direction: column;
    gap: 1.5rem;
  }
}

.headerText {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 1.25rem;
  white-space: nowrap;

  p {
    text-wrap: pretty;
  }
}

.buttonContainer {
  width: 13.125rem;
  height: 4.25rem;
}

@media (max-width: 1400px) {
  .buttonContainer {
    width: 12rem;

    p {
      font-size: vars.$font-size-p2;
    }
  }
}

.imageGrid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  row-gap: 2.5rem;
  column-gap: 6.25rem;
}

.imageWrapper {
  position: relative;
  width: 140px; // 명시적인 너비 설정
  height: 140px; // 명시적인 높이 설정

  @media (max-width: 1600px) {
    width: 120px;
    height: 120px;
  }

  @media (max-width: 1400px) {
    width: 100px;
    height: 100px;
  }

  @media (max-width: 1024) {
    width: 80px;
    height: 80px;
  }
}

.profileImage {
  object-fit: cover;
  border-radius: 20px;
  transition: transform 0.3s ease;
  cursor: pointer;

  &:hover {
    transform: scale(1.2);
  }

  &.selected {
    outline: 0.25rem solid vars.$dark-color;
  }
}

@-webkit-keyframes slide-out-right {
  0% {
    -webkit-transform: translateX(0);
    transform: translateX(0);
    opacity: 1;
  }
  100% {
    -webkit-transform: translateX(1000px);
    transform: translateX(1000px);
    opacity: 0;
  }
}

@keyframes slide-out-right {
  0% {
    -webkit-transform: translateX(0);
    transform: translateX(0);
    opacity: 1;
  }
  100% {
    -webkit-transform: translateX(1000px);
    transform: translateX(1000px);
    opacity: 0;
  }
}
